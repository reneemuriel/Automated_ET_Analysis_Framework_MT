Background
In the last decades, eye tracking devices have been increasingly used by researchers to understand humancomputer
interaction. Eye movements are understood to reflect the human thought process (Yarbus 1967)
and eye trackers are able to track eye movements by recording infrared light reflection of the cornea
(Holmqvist et al. 2011). The most reported eye movements in usability research are the saccadic eye
movements, called fixations and saccades (Bojko 2013). Fixations can last from a few milliseconds up to
several seconds and denote a period where the retina is stabilized over a specific object of interest, while
the rapid motion from one fixation to another is called saccade (Duchowski 2007). It is generally
considered, that fixations are a measure of attention to that position, which, in usability research, helps
gain valuable input for the validation or improvement of a product (Holmqvist et al. 2011). Richardson &
Spivey (2004) expressed, that the analysis of eye movements are of great value to designers and engineers,
because they allow for more detailed measurements, especially when fixations and saccades can be
assigned to user defined Areas of Interest (AOI’s). This allows the introduction of additional measurement
metrics such as dwell times and revisits and therefore lead to more detailed semantic analysis of user
behavior.



In the Folder "Data" you will find some real data from a previous study.
The data gives you the start and end time of a fixation, as well as the 2D px distance from the gaze point to each object of interest (OOI).
- Note: Ignore the column titled "Action" for now.
Try to implement the following things in python:

Programming Tips & best practices:
	- always use descriptive names for variables, classes and functions
	- Don't hardcode. Your program should be usable for other cases
	- Delete Unncessary code
	- work with version control (github, gitlab)
	- Comment your code and explain why a piece of code exists, rather than what it actually does
	- Use functions for repeated tasks
	- Google your errors (stack overflow). There is a big chance that someone encountered it before.
	- Test your code iteratively! Don’t write all at once!
	- use existing python libraries
 
EXCERCISE

1. 	Load the data "Participant_Case1.txt" from the Data folder "Trainset". 
2. 	Distances of 0 indicate a direct fixation onto that object (direclty looking), also called OOI Hits.
	a Count the OOI hits for each object
	b Sum the fixation times of each OOI hit over the whole trial (called dwell time), for each OOI.
	c Calculate the relative percentages that the participant spend looking at individual OOIs over the trial
	d Visualize using barplots or similar (use packages "seaborn" or "plotly")
3. 	Now, consider foveal vision (pixel distance below 20px). Include every fixation with <20px as OOI hit.
	a Repeat 2a-d for this case
	b What is the difference to distance 0?
		- more hits and dwell time in total
		- more relative dwell time [%] of physical objects compared to the App screen in 20px compared to 0px
		- App has most hits with 0px, while Pen has most hits with 20px
4. 	What other interesting metrics can you come up with?
		- time for different actions
		- overall fixation time vs. saccades
		- calculate patterns, e.g. app - pen - app
5. 	Finally, test your code on new data (from folder "TestSet").
	Calculate mean, median, and std for these cases over the whole group.
		- can be found in .csv file in "xx px pixel distance" folder


